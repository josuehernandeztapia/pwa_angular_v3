{
  "name": "conductores-pwa",
  "version": "0.0.0",
  "scripts": {
    "verify:ux": "bash scripts/verify-ux.sh",
    "audit:tailwind": "python3 scripts/audit_tailwind.py --output reports/tailwind-audit.csv",
    "lint:tailwind": "python3 scripts/audit_tailwind.py --fail-on-violation",
    "assets:app-icons": "node scripts/generate-app-icons.js",
    "prebuild:prod": "npm run assets:app-icons",
    "ng": "ng",
    "start": "ng serve --configuration=development --port=4300",
    "start:bff": "cd bff && npm run start:dev",
    "lh:ci": "lighthouse http://localhost:4200 --preset=mobile --budgets-path=./lighthouse-budgets.json --quiet --chrome-flags='--headless --no-sandbox'",
    "bff:install": "cd bff && npm install",
    "bff:dev": "cd bff && npm run start:dev",
    "bff:build": "cd bff && npm run build",
    "bff:test": "cd bff && npm test",
    "dev:all": "concurrently \"npm run start\" \"npm run bff:dev\"",
    "install:all": "npm install && npm run bff:install",
    "build:all": "npm run build:prod && npm run bff:build",
    "test:all:monorepo": "npm run test:unit && npm run bff:test && npm run test:e2e:chrome",
    "lint:all": "npm run lint && cd bff && npm run lint",
    "avi-lab:install": "cd avi-lab && npm install",
    "avi-lab:dev": "cd avi-lab && npm run dev",
    "avi-lab:start": "cd avi-lab && npm start",
    "dev:avi-lab": "concurrently \"npm run bff:dev\" \"npm run avi-lab:dev\"",
    "serve:test": "ng serve --configuration=development --port=4200",
    "serve:prod": "node scripts/serve-prod.js",
    "build": "ng build",
    "build:test": "ng build --configuration=development",
    "build:prod": "ng build --configuration production",
    "build:prod:stats": "ng build --configuration production --stats-json",
    "build:prod:performance": "ng build --configuration production --aot --build-optimizer",
    "build:check": "ng build --configuration production --dry-run",
    "size:guard": "node scripts/check-bundle-size.mjs",
    "build:analyze": "ng build --configuration production --stats-json && npx webpack-bundle-analyzer dist/conductores-pwa/stats.json",
    "build:staging": "ng build --configuration=staging",
    "serve:staging": "ng serve --configuration=staging",
    "smoke:bff": "bash scripts/smoke-bff.sh",
    "smoke:pwa": "bash scripts/smoke-pwa.sh",
    "watch": "ng build --watch --configuration development",
    "test": "ng test",
    "test:unit": "CHROME_BIN=$(node scripts/chrome-bin.js || echo '') ng test --watch=false --browsers=ChromeHeadless",
    "test:single": "KARMA_PORT=9878 CHROME_BIN=$(node scripts/chrome-bin.js || echo '') ng test --watch=false --browsers=ChromeHeadless",
    "test:single:services": "KARMA_PORT=9879 CHROME_BIN=$(node scripts/chrome-bin.js || echo '') ng test --ts-config=tsconfig.spec.services.json --include='**/services/**/*.spec.ts' --watch=false --browsers=ChromeHeadless",
    "test:services": "CHROME_BIN=$(node scripts/chrome-bin.js || echo '') ng test --ts-config=tsconfig.spec.services.json --include='**/services/**/*.spec.ts' --watch=false --browsers=ChromeHeadless",
    "test:unit:new-feature": "CHROME_BIN=$(node scripts/chrome-bin.js || echo '') ng test --watch=false --browsers=ChromeHeadless --include='src/app/services/user-profile.service.spec.ts,src/app/services/flows.service.spec.ts,src/app/services/tanda-lab.service.spec.ts,src/app/services/postventa.service.spec.ts'",
    "test:components": "ng test --ts-config=tsconfig.spec.components.json --include='**/components/**/*.spec.ts' --watch=false --browsers=ChromeHeadless",
    "test:utilities": "ng test --include='**/utils/**/*.spec.ts,**/shared/**/*.spec.ts' --watch=false --browsers=ChromeHeadless",
    "test:coverage": "ng test --watch=false --browsers=ChromeHeadless --code-coverage",
    "test:visual": "playwright test --config=playwright.config.ts",
    "test:visual:all": "playwright test --config=playwright.config.ts",
    "test:visual:report": "playwright show-report",
    "test:visual:modules": "playwright test --config=playwright.config.ts --grep @",
    "test:visual:modules:cross:browser": "npm run test:visual",
    "test:visual:modules:responsive": "npm run test:visual",
    "test:visual:chromium": "playwright test --config=playwright.config.ts --project=chromium",
    "test:visual:firefox": "playwright test --config=playwright.config.ts --project=firefox",
    "test:visual:webkit": "playwright test --config=playwright.config.ts --project=webkit",
    "test:visual:update": "playwright test --config=playwright.config.ts --update-snapshots",
    "test:visual:ui": "playwright test --config=playwright.config.ts --ui",
    "test:ux-ui": "bash -lc \"trap 'kill %1' EXIT; npx ng serve --configuration=development --port=4200 & npx wait-on http://localhost:4200 && npx cypress run --browser chrome --headless --spec 'cypress/e2e/07-ux-ui-functional.cy.ts'\"",
    "test:smoke": "bash -lc \"trap 'kill %1' EXIT; npx ng serve --configuration=development --port=4200 & npx wait-on http://localhost:4200 && npx cypress run --browser chrome --headless --spec 'cypress/e2e/00-smoke-navigation.cy.ts'\"",
    "test:e2e:smoke": "bash -lc \"trap 'kill %1' EXIT; npx ng serve --configuration=development --port=4200 & npx wait-on http://localhost:4200 && npx cypress run --browser chrome --headless --spec 'cypress/e2e/smoke-functional-parity.cy.ts'\"",
    "test:smoke:guided": "bash -lc \"trap 'kill %1' EXIT; npx ng serve --configuration=development --port=4200 & npx wait-on http://localhost:4200 && npx cypress run --browser chrome --headless --config supportFile=false --spec 'cypress/e2e/smoke-guided-basic.cy.ts'\"",
    "test:smoke:lab": "bash -lc \"trap 'kill %1' EXIT; (cd avi-lab && npx http-server . -p 8080) & npx wait-on http://localhost:8080 && npx cypress run --browser chrome --headless --config baseUrl=http://localhost:8080,supportFile=false --spec 'cypress/e2e/smoke-avi-lab.cy.ts'\"",
    "test:ux-ui+smoke": "bash -lc \"trap 'kill %1' EXIT; npx ng serve --configuration=development --port=4200 & npx wait-on http://localhost:4200 && npx cypress run --browser chrome --headless --spec 'cypress/e2e/07-ux-ui-functional.cy.ts,cypress/e2e/00-smoke-navigation.cy.ts'\"",
    "test:accessibility": "CHROME_BIN=$(node scripts/chrome-bin.js || echo '') ng test --include='**/*.a11y.spec.ts' --watch=false --browsers=ChromeHeadless",
    "test:a11y": "axe --dir ./dist/conductores-pwa --include='*.html' --save ./reports/accessibility/results.json",
    "test:a11y:report": "axe-reporter --reporter=html --output=./reports/accessibility/report.html ./reports/accessibility/results.json",
    "test:a11y:framework": "ng test --include='**/accessibility/**/*.spec.ts' --watch=false --browsers=ChromeHeadless",
    "test:a11y:components": "ng test --include='**/components/**/*.a11y.spec.ts' --watch=false --browsers=ChromeHeadless",
    "test:a11y:full": "npm run test:a11y:framework && npm run test:a11y:components && npm run test:a11y",
    "test:e2e": "playwright test --project=chromium --reporter=html,json",
    "test:qa-visual": "playwright test tests/e2e/qa-visual-final.spec.ts --project=chromium",
    "test:qa-visual:all": "playwright test tests/e2e/qa-visual-final.spec.ts",
    "test:qa-visual:report": "playwright show-report && cat QA-REPORT.md",
    "test:e2e:open": "cypress open | cat",
    "test:e2e:chrome": "bash -lc 'BROWSER=chrome; command -v google-chrome >/dev/null 2>&1 || BROWSER=electron; cypress run --browser $BROWSER --headless | cat'",
    "test:e2e:firefox": "cypress run --browser firefox --headless | cat",
    "test:e2e:webkit": "cypress run --browser electron --headless | cat",
    "test:pact:consumer": "ng test --include='**/contract/**/*.spec.ts' --watch=false --browsers=ChromeHeadless",
    "test:chaos": "ng test --include='**/chaos/**/*.spec.ts' --watch=false --browsers=ChromeHeadless",
    "test:mutation": "stryker run",
    "test:mutation:quick": "stryker run --mutate='src/app/services/api.service.ts,src/app/services/data.service.ts'",
    "test:mutation:update": "stryker run --force",
    "test:avi:voice:analysis": "node test-voice-evaluation.js",
    "test:avi:voice:scoring": "node test-scoring-thresholds.js",
    "test:avi:voice:patterns": "node test-fallback-mechanisms.js",
    "test:simulador:cotizador:precision": "ng test --watch=false --browsers=ChromeHeadless --include='**/cotizador-engine.service.spec.ts'",
    "test:simulador:payment:scenarios": "ng test --watch=false --browsers=ChromeHeadless --include='**/simulador-engine.service.spec.ts'",
    "test:business:edomex:policies": "node test-scoring-thresholds.js",
    "test:business:ags:interest-rates": "node tests/revenue_engine_test.js",
    "test:integration": "ng test --watch=false --browsers=ChromeHeadless --ts-config=tsconfig.spec.integration.json",
    "test:integration:metamap": "CHROME_BIN=$(node scripts/chrome-bin.js) ng test --watch=false --browsers=ChromeHeadless --include='**/metamap.service.spec.ts'",
    "test:integration:conekta": "CHROME_BIN=$(node scripts/chrome-bin.js) ng test --watch=false --browsers=ChromeHeadless --include='**/conekta-payment.service.spec.ts'",
    "test:contract:consumer": "ng test --include='**/contract/**/*.spec.ts' --watch=false --browsers=ChromeHeadless",
    "lint": "ng lint",
    "lint:report": "ng lint --format=json --output-file=reports/eslint/results.json",
    "security:check": "npm audit --audit-level moderate",
    "test:security:owasp-top-10": "npm run security:check",
    "test:perf:lighthouse": "lhci autorun --config=.lighthouserc.js | cat",
    "test:perf:pwa:checklist": "node scripts/pwa-checklist.js",
    "test:perf:bundle-size": "npm run bundle:size-check",
    "test:perf:core-web-vitals": "lhci autorun --config=.lighthouserc.js | cat",
    "bundle:size-check": "bundlesize",
    "coverage:generate": "node coverage-report-generator.js",
    "coverage:merge": "nyc merge coverage-reports/ coverage/merged/coverage.json && nyc report --reporter=lcov --report-dir=coverage/merged/",
    "coverage:report": "nyc report --reporter=html --report-dir=coverage/merged/html/",
    "coverage:serve": "http-server reports -p 8080 -o",
    "quality:gates": "node scripts/quality-gates.js",
    "test:quality:gates:all": "npm run build:prod && npm run test:coverage && mkdir -p coverage/merged && cp coverage/conductores-pwa/lcov.info coverage/merged/lcov.info && npm run test:a11y && MINIMUM_COVERAGE=98 MAX_LIGHTHOUSE_SCORE=95 MAX_ACCESSIBILITY_VIOLATIONS=0 MAX_BUNDLE_SIZE=2621440 node scripts/quality-gates.js",
    "quality:report": "node coverage-report-generator.js",
    "quality:badge": "node scripts/quality-badge.js",
    "prebuild:qa": "npm run lint && npm run test:unit && npm run test:services && npm run test:e2e:chrome && npm run test:accessibility && npm run test:mutation:quick && npm run quality:gates",
    "prebuild:qa:full": "npm run lint && npm run test:coverage && npm run test:visual && npm run test:e2e:chrome && npm run test:a11y && npm run test:mutation && npm run quality:report",
    "mock:api": "json-server --watch db.json --port 3000",
    "test:e2e-demo": "playwright test tests/e2e/login-flow.spec.ts --project=chromium --reporter=html,json",
    "test:all": "npm run test:unit && npm run test:accessibility && npm run test:visual && npm run test:e2e:chrome && npm run test:mutation:quick && npm run coverage:generate",
    "test:config:settings:persistence": "ng test --watch=false --browsers=ChromeHeadless --ts-config=tsconfig.spec.configuracion.json",
    "test:config:theme:switching": "ng test --watch=false --browsers=ChromeHeadless --ts-config=tsconfig.spec.configuracion.json",
    "test:config:security:validation": "ng test --watch=false --browsers=ChromeHeadless --ts-config=tsconfig.spec.configuracion.json",
    "test:config:data:retention:policies": "ng test --watch=false --browsers=ChromeHeadless --ts-config=tsconfig.spec.configuracion.json",
    "test:flow:builder:visual:editor": "playwright test --config=playwright.config.ts --grep @flow-editor",
    "test:flow:builder:node:connections": "playwright test --config=playwright.config.ts --grep @flow-connections",
    "test:flow:builder:market:compatibility": "playwright test --config=playwright.config.ts --grep @flow-market",
    "test:flow:builder:deployment:pipeline": "playwright test --config=playwright.config.ts --grep @flow-deploy",
    "test:config:glassmorphism:effects": "node scripts/ux-coherence-runner.js ux:modals",
    "test:config:responsive:mobile:tablet": "node scripts/ux-coherence-runner.js responsive:mobile",
    "prepare": "husky",
    "typecheck": "tsc -p tsconfig.app.json --noEmit",
    "test:visual:coherence:all:components": "node scripts/ux-coherence-runner.js coherence:all",
    "test:visual:color:palette:consistency": "node scripts/ux-coherence-runner.js visual:palette",
    "test:visual:typography:hierarchy": "node scripts/ux-coherence-runner.js visual:typography",
    "test:visual:spacing:consistency": "node scripts/ux-coherence-runner.js visual:spacing",
    "test:ux:component:transitions": "node scripts/ux-coherence-runner.js ux:transitions",
    "test:ux:modal:overlay:consistency": "node scripts/ux-coherence-runner.js ux:modals",
    "test:ux:form:interaction:flow": "node scripts/ux-coherence-runner.js ux:forms",
    "test:ux:navigation:flow:coherence": "node scripts/ux-coherence-runner.js ux:navigation",
    "test:responsive:breakpoint:coherence": "node scripts/ux-coherence-runner.js responsive:breakpoints",
    "test:ux:coherence:master:validation": "node scripts/ux-coherence-runner.js master:validation",
    "monitor:ux:coherence:real:time": "node scripts/ux-coherence-runner.js coherence:all",
    "upgrade:component:nueva-oportunidad": "node scripts/upgrade-component.js nueva-oportunidad",
    "upgrade:component:clientes-list": "node scripts/upgrade-component.js clientes",
    "upgrade:component:onboarding-main": "node scripts/upgrade-component.js onboarding",
    "upgrade:component:flow-builder": "node scripts/upgrade-component.js flow-builder",
    "upgrade:component:simulador-main": "node scripts/upgrade-component.js simulador-main",
    "upgrade:component:delivery-phase": "node scripts/upgrade-component.js delivery-phase",
    "upgrade:component:documents-phase": "node scripts/upgrade-component.js documents-phase",
    "upgrade:component:plates-phase": "node scripts/upgrade-component.js plates-phase",
    "upgrade:component:cotizador-main": "node scripts/upgrade-component.js cotizador-main",
    "upgrade:component:opportunities-pipeline": "node scripts/upgrade-component.js opportunities-pipeline",
    "upgrade:component:cliente-form": "node scripts/upgrade-component.js cliente-form",
    "upgrade:component:avi-verification-modal": "node scripts/upgrade-component.js avi-verification-modal",
    "upgrade:component:document-upload-flow": "node scripts/upgrade-component.js document-upload-flow",
    "upgrade:shared:savings-projection-chart": "node scripts/upgrade-component.js savings-projection-chart",
    "upgrade:shared:tanda-timeline": "node scripts/upgrade-component.js tanda-timeline",
    "upgrade:shared:scenario-card": "node scripts/upgrade-component.js scenario-card",
    "upgrade:shared:progress-bar": "node scripts/upgrade-component.js progress-bar",
    "upgrade:shared:guarantee-panel": "node scripts/upgrade-component.js guarantee-panel",
    "upgrade:ops:deliveries": "node scripts/upgrade-component.js ops-deliveries",
    "upgrade:ops:delivery-detail": "node scripts/upgrade-component.js delivery-detail",
    "upgrade:ops:triggers-monitor": "node scripts/upgrade-component.js triggers-monitor",
    "upgrade:post-sales:client-tracking": "node scripts/upgrade-component.js client-tracking",
    "clean:audit": "node scripts/clean-audit.js",
    "clean:audit:fix": "node scripts/clean-audit.js --fix"
  },
  "lint-staged": {
    "*.{ts,js}": [
      "echo '[LINT] Validating TypeScript/JavaScript files...'",
      "git add"
    ],
    "*.{ts,html}": [
      "echo '[PASS] TypeScript/HTML files validated'"
    ],
    "*.{ts,html,scss,css}": [
      "echo '[PASS] Accessibility validation completed'"
    ]
  },
  "private": true,
  "dependencies": {
    "@angular/animations": "^17.3.0",
    "@angular/common": "^17.3.0",
    "@angular/compiler": "^17.3.0",
    "@angular/core": "^17.3.0",
    "@angular/fire": "^17.1.0",
    "@angular/forms": "^17.3.0",
    "@angular/platform-browser": "^17.3.0",
    "@angular/platform-browser-dynamic": "^17.3.0",
    "@angular/router": "^17.3.0",
    "@angular/service-worker": "^17.3.12",
    "@phosphor-icons/web": "^2.1.2",
    "@types/jspdf": "^1.3.3",
    "chart.js": "^4.5.0",
    "firebase": "^12.2.1",
    "jspdf": "^3.0.2",
    "lucide-angular": "^0.544.0",
    "rxjs": "~7.8.0",
    "tesseract.js": "^6.0.1",
    "tslib": "^2.3.0",
    "zone.js": "~0.14.3"
  },
  "devDependencies": {
    "@angular-devkit/build-angular": "^17.3.11",
    "@angular-eslint/builder": "17.5.3",
    "@angular-eslint/eslint-plugin": "17.5.3",
    "@angular-eslint/eslint-plugin-template": "17.5.3",
    "@angular-eslint/schematics": "^20.2.0",
    "@angular-eslint/template-parser": "17.5.3",
    "@angular/cli": "^17.3.11",
    "@angular/compiler-cli": "^17.3.0",
    "@axe-core/cli": "^4.10.0",
    "@axe-core/playwright": "^4.10.2",
    "@cypress/code-coverage": "^3.14.6",
    "@pact-foundation/pact": "^15.0.1",
    "@pact-foundation/pact-node": "^10.18.0",
    "@playwright/test": "^1.55.0",
    "@storybook/test-runner": "^0.23.0",
    "@stryker-mutator/core": "^9.1.1",
    "@stryker-mutator/html-reporter": "^3.1.0",
    "@stryker-mutator/karma-runner": "^9.1.1",
    "@stryker-mutator/typescript-checker": "^9.1.1",
    "@testing-library/angular": "^17.4.0",
    "@testing-library/dom": "^10.4.1",
    "@testing-library/jest-dom": "^6.8.0",
    "@testing-library/user-event": "^14.6.1",
    "@types/jasmine": "~5.1.0",
    "@types/jasminewd2": "^2.0.13",
    "@types/jest-axe": "^3.5.9",
    "@types/node": "^24.6.0",
    "@types/tesseract.js": "^0.0.2",
    "@typescript-eslint/eslint-plugin": "7.11.0",
    "@typescript-eslint/parser": "7.11.0",
    "autoprefixer": "^10.4.21",
    "axe-core": "^4.10.3",
    "c8": "^10.1.3",
    "cypress": "^15.0.0",
    "cypress-mochawesome-reporter": "^4.0.2",
    "cypress-multi-reporters": "^2.0.5",
    "esbuild": "^0.25.9",
    "eslint": "^8.57.0",
    "http-server": "^14.1.1",
    "husky": "^9.1.7",
    "istanbul-reports": "^3.2.0",
    "jasmine-core": "~5.1.0",
    "jest-axe": "^10.0.0",
    "json-server": "^1.0.0-beta.3",
    "karma": "~6.4.0",
    "karma-chrome-launcher": "~3.2.0",
    "karma-coverage": "~2.2.0",
    "karma-jasmine": "~5.1.0",
    "karma-jasmine-html-reporter": "~2.1.0",
    "lighthouse": "^12.2.1",
    "lint-staged": "^16.1.6",
    "mocha-junit-reporter": "^2.2.1",
    "nyc": "^17.1.0",
    "playwright": "^1.55.0",
    "postcss": "^8.5.6",
    "puppeteer": "^24.18.0",
    "tailwindcss": "^3.4.17",
    "typescript": "~5.4.2",
    "wait-on": "^8.0.1",
    "webpack": "^5.102.0",
    "webpack-bundle-analyzer": "^4.10.2"
  }
}
