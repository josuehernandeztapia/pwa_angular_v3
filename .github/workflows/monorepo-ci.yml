name: Monorepo CI/CD - PWA + BFF

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:
    inputs:
      reason:
        description: "Why are you triggering this run?"
        required: false
        default: "manual test run"

permissions:
  contents: read
  actions: read
  issues: write

jobs:
  detect-changes:
    name: Detect Changes
    runs-on: ubuntu-latest
    outputs:
      pwa-changed: ${{ steps.changes.outputs.pwa }}
      bff-changed: ${{ steps.changes.outputs.bff }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      - uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            pwa:
              - 'src/**'
              - 'package.json'
              - 'angular.json'
              - 'tsconfig.json'
            bff:
              - 'bff/**'

  pwa-ci:
    name: PWA CI
    runs-on: ubuntu-latest
    needs: detect-changes
    # Run on manual dispatch or when PWA files changed
    if: github.event_name == 'workflow_dispatch' || needs.detect-changes.outputs.pwa-changed == 'true'
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install PWA Dependencies
        run: npm ci --legacy-peer-deps

      - name: Lint PWA
        run: npm run lint

      - name: Test PWA (services on PR)
        if: github.event_name == 'pull_request'
        uses: nick-fields/retry@v3
        with:
          timeout_minutes: 25
          max_attempts: 2
          command: npm run test:services

      - name: Test PWA (full)
        if: github.event_name != 'pull_request'
        uses: nick-fields/retry@v3
        with:
          timeout_minutes: 25
          max_attempts: 2
          command: npm run test:unit

      - name: Build PWA (stats)
        run: npm run build:prod:stats

      - name: Bundle Size Guard
        run: npm run size:guard

      - name: Upload PWA Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: pwa-dist
          path: dist/

  bff-ci:
    name: BFF CI
    runs-on: ubuntu-latest
    needs: detect-changes
    # Run on manual dispatch or when BFF files changed
    if: github.event_name == 'workflow_dispatch' || needs.detect-changes.outputs.bff-changed == 'true'
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: 'bff/package-lock.json'

      - name: Install BFF Dependencies
        run: cd bff && npm ci

      - name: Lint BFF
        run: cd bff && npm run lint

      - name: Test BFF
        uses: nick-fields/retry@v3
        with:
          timeout_minutes: 20
          max_attempts: 2
          command: cd bff && npm test

      - name: Build BFF
        run: cd bff && npm run build

      - name: Upload BFF Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: bff-dist
          path: bff/dist/

  e2e-tests:
    name: E2E Tests
    runs-on: ubuntu-latest
    needs: [pwa-ci, bff-ci]
    if: always() && (needs.pwa-ci.result == 'success' || needs.bff-ci.result == 'success')
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install Dependencies
        run: npm ci --legacy-peer-deps

      - name: Install BFF Dependencies
        run: cd bff && npm ci

      - name: Start Services
        run: |
          npm run bff:dev &
          npm start &
          npx wait-on http://localhost:4200 http://localhost:3000

      - name: Run E2E Tests
        uses: nick-fields/retry@v3
        with:
          timeout_minutes: 30
          max_attempts: 2
          command: npm run test:e2e:chrome

  quality-gates:
    name: Quality Gates
    runs-on: ubuntu-latest
    needs: [pwa-ci, bff-ci, e2e-tests]
    if: always()
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install Dependencies
        run: npm ci --legacy-peer-deps

      - name: Run Quality Gates
        run: npm run quality:gates

      - name: Generate Centralized Coverage Report
        run: npm run quality:report

      - name: Upload Coverage Reports
        uses: actions/upload-artifact@v4
        with:
          name: coverage-reports
          path: reports/

  report-failures:
    name: Report Failures
    runs-on: ubuntu-latest
    needs: [pwa-ci, bff-ci, e2e-tests, quality-gates, pwa-services-tests]
    if: failure()
    steps:
      - name: Create CI failure issue
        uses: actions/github-script@v7
        with:
          script: |
            const { owner, repo } = context.repo;
            const run_id = context.runId;
            const run = await github.rest.actions.getWorkflowRun({ owner, repo, run_id });
            const jobs = await github.rest.actions.listJobsForWorkflowRun({ owner, repo, run_id, per_page: 100 });
            const failed = jobs.data.jobs.filter(j => ['failure','cancelled','timed_out','action_required'].includes(j.conclusion));
            const body = [
              `Workflow: ${run.data.name}`,
              `Run URL: ${run.data.html_url}`,
              `Event: ${run.data.event}`,
              `Branch: ${run.data.head_branch}`,
              `Commit: ${run.data.head_sha}`,
              '',
              'Failed jobs:',
              ...failed.map(j => `- ${j.name}: ${j.html_url} (${j.conclusion})`)
            ].join('\n');
            const title = `CI failure: ${run.data.head_branch} @ ${run.data.head_sha.substring(0,7)}`;
            await github.rest.issues.create({ owner, repo, title, body });

  pwa-services-tests:
    name: PWA Services Unit Tests (manual)
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch'
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install PWA Dependencies
        run: npm ci --legacy-peer-deps

      - name: Run Services Unit Tests
        uses: nick-fields/retry@v3
        with:
          timeout_minutes: 20
          max_attempts: 2
          command: npm run test:services
